SOLID

Single Responsibility
-Each class should have only one sole purpose and not filled with excessive functionality

Open Closed
-Classes should be open for extension 
-Closed for modification

Liskov Substitution
-This means that every Subclass or derived class should be substitutable for their or Parent class 
- Sub class should extend capabilty of parent class but not narrow it down

Interface Segreation
-interface should not force class to implement what they can't do
-Large interface should be divided into small ones

Dependency-Inversion Principle
-Component should depend on abstraction not on concrete 